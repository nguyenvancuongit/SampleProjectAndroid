apply plugin: 'com.android.application'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.app.temp"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        release {
            try {
                storeFile file("../release/keystore.file")
                storePassword KEYSTORE_PASSWORD
                keyAlias "keystore"
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                ex.printStackTrace()
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
        }
        debug {
            minifyEnabled false
        }
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def apkName = "temp_project";
                def formattedDate = new Date().format('yyMMdd')
                if (variant.buildType.name == "release") {
                    apkName += "_" + variant.productFlavors[0].name + "_" + formattedDate + "_" + variant.buildType.name + "_v" + android.defaultConfig.versionName + ".apk";
                    outputFileName = new File(getRootDir().path + "/release", apkName)
                } else {
                    apkName += "_" + variant.productFlavors[0].name + "_" + formattedDate + "_" + variant.buildType.name + "_v" + android.defaultConfig.versionName + ".apk";
                    outputFileName = new File((String) output.outputFile.parent, apkName)
                }
            }
        }
    }

    flavorDimensions "server_test", "server_prod"
    productFlavors {
        server_test {
            dimension "server_test"
            applicationId "com.app.temp.dev"
            buildConfigField "String", "HOST_URL", "\"https://jsonplaceholder.typicode.com/\""
        }
        server_prod {
            dimension "server_prod"
            applicationId "com.app.temp"
            buildConfigField "String", "HOST_URL", "\"https://jsonplaceholder.typicode.com/\""
            proguardFiles 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.googlecode.libphonenumber:libphonenumber:7.3.0'
    compile 'com.android.support:design:26.1.0'

    /*ButterKnife*/
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    /*Retrofit*/
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'

    /*OkHttp*/
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.squareup.okio:okio:1.13.0'

    /*Gson*/
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'

    /*reactive*/
    compile 'io.reactivex.rxjava2:rxjava:2.1.2'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    /*dagger*/
    compile 'com.google.dagger:dagger:2.9'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.9'
    provided 'javax.annotation:jsr250-api:1.0'
}
